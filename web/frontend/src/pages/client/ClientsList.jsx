// src/pages/ClientsList.jsx
import { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";

export default function ClientsList() {
  const [clients, setClients] = useState([]);
  const navigate = useNavigate();

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    fetch("/client") // —ç–Ω–¥–ø–æ–∏–Ω—Ç –∏–∑ Go
      .then((res) => res.json())
      .then((data) => setClients(data))
      .catch((err) => console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:", err));
  }, []);

  async function deleteClient(id) {
    if (!window.confirm("–£–¥–∞–ª–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞?")) return;

    try {
      const res = await fetch(`/client/${id}`, {
        method: "DELETE",
        headers: { "Content-Type": "application/json" },
      });

      if (res.ok) {
        alert("–ö–ª–∏–µ–Ω—Ç —É–¥–∞–ª–µ–Ω");
        setClients(clients.filter((c) => c.ID !== id));
      } else {
        const data = await res.json();
        alert(data.error || "–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏");
      }
    } catch (err) {
      alert("–û—à–∏–±–∫–∞: " + err.message);
    }
  }

  return (
    <div className="p-4">
      <h2 className="text-xl font-bold mb-4">–°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤</h2>

      <table className="border border-collapse w-full">
        <thead>
          <tr className="bg-gray-200">
            <th className="border p-2">–ò–º—è</th>
            <th className="border p-2">–§–∞–º–∏–ª–∏—è</th>
            <th className="border p-2">–û—Ç—á–µ—Å—Ç–≤–æ</th>
            <th className="border p-2">–ê–¥—Ä–µ—Å</th>
            <th className="border p-2">–¢–µ–ª–µ—Ñ–æ–Ω</th>
            <th className="border p-2">–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è</th>
            <th className="border p-2">–ü–∞—Å–ø–æ—Ä—Ç</th>
            <th className="border p-2">–î–µ–π—Å—Ç–≤–∏—è</th>
          </tr>
        </thead>
        <tbody>
          {clients.map((client) => (
            <tr key={client.ID}>
              <td className="border p-2">{client.Firstname}</td>
              <td className="border p-2">{client.Lastname}</td>
              <td className="border p-2">{client.Middlename}</td>
              <td className="border p-2">{client.Address}</td>
              <td className="border p-2">{client.Phonenumber}</td>
              <td className="border p-2">
                {new Date(client.Dateofbirth).toLocaleDateString("ru-RU")}
              </td>
              <td className="border p-2">{client.Passport}</td>
              <td className="border p-2">
                <button
                  className="mr-2 text-blue-600"
                  onClick={() => navigate(`/client/edit/${client.ID}`)}
                >
                  ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                </button>
                <button
                  className="text-red-600"
                  onClick={() => deleteClient(client.ID)}
                >
                  üóëÔ∏è –£–¥–∞–ª–∏—Ç—å
                </button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>

      <br />
      <button
        className="bg-green-500 text-white px-3 py-1 rounded"
        onClick={() => navigate("/client/new")}
      >
        ‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞
      </button>
    </div>
  );
}
