import React, { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";

const ProvidersList = () => {
  const [providers, setProviders] = useState([]);
  const navigate = useNavigate();

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ —Å —Å–µ—Ä–≤–µ—Ä–∞
  useEffect(() => {
    fetch("/provider") // –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º–∞—è API —Ç–æ—á–∫–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞
      .then((res) => res.json())
      .then((data) => setProviders(data))
      .catch((err) => console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤:", err));
  }, []);

  const deleteProvider = async (id) => {
    if (!window.confirm("–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞?")) return;

    try {
      const res = await fetch(`/provider/delete/${id}`, { method: "DELETE" });
      if (!res.ok) {
        const data = await res.json();
        throw new Error(data.error || "–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏");
      }

      // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è
      setProviders(providers.filter((p) => p.ID !== id));
      alert("–ü—Ä–æ–≤–∞–π–¥–µ—Ä —É–¥–∞–ª–µ–Ω");
    } catch (err) {
      console.error(err);
      alert("–û—à–∏–±–∫–∞: " + err.message);
    }
  };

  return (
    <div>
      <h2>–°–ø–∏—Å–æ–∫ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤</h2>
      <table border="1" cellPadding="5" cellSpacing="0">
        <thead>
          <tr>
            <th>–ù–∞–∑–≤–∞–Ω–∏–µ</th>
            <th>–û–±—Ä–∞—â–∞—Ç—å—Å—è –ö</th>
            <th>–ê–¥—Ä–µ—Å</th>
            <th>Email</th>
            <th>–¢–µ–ª–µ—Ñ–æ–Ω</th>
            <th>–î–µ–π—Å—Ç–≤–∏—è</th>
          </tr>
        </thead>
        <tbody>
          {providers.map((p) => (
            <tr key={p.ID}>
              <td>{p.Name}</td>
              <td>{p.Addressto}</td>
              <td>{p.Address}</td>
              <td>{p.Email}</td>
              <td>{p.PhoneNumber}</td>
              <td>
                <button onClick={() => navigate(`/provider/edit/${p.ID}`)}>‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
                <button onClick={() => deleteProvider(p.ID)}>üóëÔ∏è –£–¥–∞–ª–∏—Ç—å</button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
      <br />
      <button onClick={() => navigate("/provider/new")}>‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞</button>
    </div>
  );
};

export default ProvidersList;
