services:
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  migrate:
    image: golang:1.23
    container_name: migrate
    working_dir: /app
    volumes:
      - ./internal/migrations:/app/migrations
    depends_on:
      postgres:
        condition: service_healthy
    entrypoint: >
      sh -c "
        go install github.com/pressly/goose/v3/cmd/goose@latest &&
        goose -dir /app/migrations -allow-missing postgres 'postgres://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}?sslmode=disable' up
      "



  zookeeper:
    image: bitnami/zookeeper:3.9.1
    container_name: zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports:
      - "2181:2181"
    volumes:
      - zkdata:/bitnami/zookeeper/data

  kafka:
    image: bitnami/kafka:3.5.0
    container_name: kafka
    ports:
      - "9092:9092"
    volumes:
      - kafkadata:/bitnami/kafka/data
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_ENABLE_KRAFT: "no"
    depends_on:
      - zookeeper

  app:
    build: .
    container_name: app
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      DOCKER_ENV: "true"
      DB_HOST: postgres       # ← поменял с db/localhost на имя сервиса
      DB_PORT: 5432   
      DB_DSN: postgres://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}?sslmode=disable
      KAFKA_BROKERS: kafka:9092
    depends_on:
      postgres:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
      kafka:
        condition: service_started
    restart: unless-stopped

volumes:
  pgdata:
  zkdata:
  kafkadata:
